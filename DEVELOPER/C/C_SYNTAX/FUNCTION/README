### ======================================================== 函数定义

返回值类型    函数名         参数列表
return_type function_name( parameter list )
{
   body of the function
}

在 C 语言中，函数由一个函数头和一个函数主体组成。
下面列出一个函数的所有组成部分：
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 返回类型：一个函数可以返回一个值。
  return_type 是函数返回的值的数据类型。
  有些函数执行所需的操作而不返回值，
  在这种情况下，return_type 是关键字 void.

2 函数名称：这是函数的实际名称。函数名和参数列表一起构成了函数签名。

3 参数：参数就像是占位符。当函数被调用时，您向参数传递一个值，这个值被称为实际参数。
  参数列表包括函数参数的类型、顺序、数量。参数是可选的，
  也就是说，函数可能不包含参数。

4 函数主体：函数主体包含一组定义函数执行任务的语句。




### ======================================================== 函数的调用

当在一个函数运行期间调用另一个函数时，在运行被调用之前，
系统需要完成3件事
        1.将所有的实际参数，返回地址等信息传递给被调用函数保存。
        2.为被调用函数的局部变量(包括形参)分配存储空间
        3.将控制转移到被调函数的入口

从被调函数返回主调函数之前，系统也要完成3件事
        1.保存被调函数的返回结果
        2.释放被调函数所占的内存空间
        3.依照被调函数保存的返回地址将控制转移到调用函数

当有多个函数相互调用时，按照"后调用先返回" 的原则，上述函数之间
信息传递和控制转移必须借助 "栈" 来实现。 即系统将整个程序运行时
所需的数据空间安排在一个栈中，每当调用一个函数时，就在栈顶分配
一个存储空间，进行压栈操作。 每当一个函数退出时，就释放它的存储
空间，就进行出栈操作，当前运行的函数永远都在栈顶的位置。


A函数调用A函数 和 A函数调用B函数在计算机看来是没有任何区别的，
只不过用我们日常的思维方式理解比较怪异而已！


### 递归函数的定义  ###
一个函数直接或间接调用自己


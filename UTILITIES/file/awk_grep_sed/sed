### ===================================================== sed
sed -i.commented '/^#/d;/^$/d' /etc/ntp.conf


sed 'p' /etc/passwd             # 打印/etc/passwd中的内容
sed -n 'p' /etc/passwd          # -n; 只显示被处理的内容
sed -n ' 1,5 p ' /etc/passwd    # 1,5; 打印第1到第5行
sed -n ' /^ysh/ p ' /etc/passwd # /^ysh/; 打印以"ysh"开头的行
sed ' /^#/ d ' ~/test           # 删除以"#"开头的行
sed ' /^#/ d; /^$/ d ' ~/test   # 删除以"#"开头的行和空白行

___________________________________________________________
### 删除以"#"开头的行和空白行;
### -i.bak; 表示直接修改原文件，并且备份原文件中的内空，以".bak"作为后缀名
sed -i.bak ' /^#/ d; /^$/ d ' ~/test







### ======================================================================= sed

sed --version

______________________________________________________________________sed print

sed ' p ' /etc/passwd
sed -n ' p ' /etc/passwd
sed -n '1,3 p ' /etc/passwd
sed -n '/^root/ p ' /etc/passwd


Using the sed PRINT command
The command P will print the pattern space(Matched lines)
The -n option supresses standard output so only matched lines display
Adding a range will print only those matched lines


__________________________________________________________________sed substitute

sed ' [range] s/<string>/<replacement>/ ' /etc/passwd
sed ' /^ysh/ s@/bin/bash@/bin/sh@ ' /etc/passwd

Using the sed SUBSTITUTE command

The substitute command in sed is your search and replace tool

The first character following the s represents the delimiters, often the / is used

Replacing the default shell of the user ysh from /bin/bash to /bin/sh



% 在/etc/passwd文件中的第6到第9行添加 4个空格，并打印出其内容
sed -n ' 6,9 s/^/    /p ' /etc/passwd

% 以 ysh为开头并以此作为边界替换其中的内容
sed -n ' /^ysh/ s@/bin/bash@/bin/sh@p ' /etc/passwd






___________________________________________________________ append\insert\delete

sed ' /^server 3/ a server ntp.example.com ' /etc/ntp.conf
sed ' /^server 0/ i server ntp.example.com ' /etc/ntp.conf
sed ' /^server\s[0-9]\.ubuntu/ d ' /etc/ntp.conf

Using the sed APPEND\INSERT\DELETE commands

Append a new line after a line

Insert a new line before a line

Delete lines from a file



______________________________________________________________ sed command line
ysh@debian:~$ sed ' {
> /^server 0/ i ntp.example.com
> /^server\s[0-9]\.ubuntu/ d
> } ' /etc/ntp.conf



Multiple sed expressions

Multiple expressions can be written on the command line by including brace 
brackets within the quoted sed instructions





_____________________________________________________________________ sed file
% cat ntp.sed
/^server 0/ i ntp.example.com
/^server\s[0-9]\.ubuntu/ d
sed -f ntp.sed /etc/ntp.conf


For code-reuse implement sed files

The sed file can be referenced with the -f option

*****Nothing is written to the file
      unless the -i option is used.
       with -i.bak a backup file is
        created prior to the edit *****



% cat ntp.sed
/^$/ d
/^\s*#/ d
/^server 0/ i ntp.example.com prefer
/^server\s[0-9]\.ubuntu/ d

sed -f ntp.sed /etc/ntp.conf
sudo sed -i.bak -f ntp.sed /etc/ntp.conf




______________________________________________________________________ sed ssh

Putting it all together with remote edits using SSH

ssh -t user@server sudo sed -i.bak -f /tmp/ntp.sed /etc/ntp.conf

-t      ;Assigns a TTY allowing for sudo password
-i      ;Creates backup with .bak extension
ntp.sed ;Sed file on the remote server
Danny can effectively update the ntp.conf files on multiple servers quickly and easily



scp ntp.sed ysh@192.168.0.105:/tmp/
ssh -t ysh@192.168.0.105 sudo sed -i.bak -f /tmp/ntp.sed /etc/ntp.conf




____________________________________________________________________ sed group

                    Substitution Grouping

s/              \([^,]*\)               /\U\1/

substitution    Groupint defined with   Replace string: upper cases
                escaped parentheses             first grouping

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

sed 's@\([^,]*\)@\U\1@' employees
sed 's@\([^,]*\),\([^,]*\)@\U\1\L\2@' employees

\([^,]*\)   ;The search string identifies all characters up to the first comma
\U\1        ;The replace string uppercases the first group
,           ;Each grouping is, itself, comma-separated

Working with the employyees file

Uppercase the first field of a comma separated file

Uppercase the first and lowercase the second field of acomma separated file



Demo Time: Format teh employees file

sed ' s/\([^,]*\)/\U\1/ ' empoyees
sed ' s/\([^,]*\),\([^,]*\)/\U\1\L\2/ ' empoyees
sed ' s/\([^,]*\),\([^,]*\)/\U\1,\L\2/ ' empoyees


% sed ' s/\([^,]*\),\([^,]*\)/\U\1,\L\2/ ' empoyees
% 把第1个单词转换成大写，把第2个单词转换成小写
% cat empoyees
Jones,Bob,232-78-3456
Jackeson,Jane,,
Federer,Jack,xxx-xx-xxx
Maw,Michael,1879-0
Alexander,Sally,345-89-8095
Beder,Ioana,567-34-9802
Staines,Brad,,



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

sed ' s/\(^\|[^0-9.]\)\([0-9]\+\)\([0-9]\{3\}\)/\1\2,\3/g ' /catlog


% cat catalog.sed
s/,/:/g
s/\(^\|[^0-9.]\)\([0-9]\+\)\([0-9]\{3\}\)/\1\2,\3/g
%或 s@\(^\|[^0-9.]\)\([0-9]\+\)\([0-9]\{3\}\)@\1\2,\3@g

sed -f catalog.sed /proc/loadavg





__________________________________________________  Executing Commands with sed
					

sed ' s/^/ls -l /e listoffiles.txt
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Making full use of the ever useful sed substitute
command coupled with execute, we can read arguments from the imput file.
We then substitute the start of the line with the command to be run
against the argument...let me show you

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sed ' /^\// s/^/tar -rf catalog.tar /e ' cat.list

/^\//           ;Require a leading forward slash
-rf catlog.tar  ;Append matching lint to TAR file
cat.list        ;File will contain catalogs to archive
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sed ' /^\// s/^/rm -f /e ' cat .list

rm -f           ;Teh origianl catalog is deleted
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% cat file.list
/etc/hosts
/etc/services

sed ' s/^/ls -l /e ' file.list
sed ' s/^/stat /e ' file.list

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% cat user.list
ysh1
ysh2

sed ' s/^/sudo useradd /e ' user.list
tail -n 2 /etc/passwd
sed ' s/^/sudo userdel -r /e ' user.list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
% cat cat.list
/home/ysh/catlog/garden

sed ' /^\// s/^/tar -rf catalog.tar /e ' cat.list


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



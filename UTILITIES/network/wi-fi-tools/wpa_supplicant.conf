### ========================================================= wpa_supplicant参数
status          stat        显示当前连接状态
disconnect      disc        阻止wpa_supplicant连接到任何接入点
quit            q           退出wpa_cli
terminate       term        终止wpa_supplicant
reconfigure     recon       使用提供的配置文件重新加载wpa_supplicant（-c参数）
scan            scan        扫描可用的接入点（仅扫描它，不显示任何内容）
scan_result     scan_r      显示上次扫描的结果
list_networks   list_n      显示已配置网络及其状态的列表（激活或未激活、已启用或已禁用）
select_network  select_n    在定义启动连接的网络中选择一个网络（即选择网络0）
enable_network  enable_n    使配置的网络可供选择（即启用网络0）
disable_network disable_n   使配置的网络不可供选择（即禁用网络0）
remove_network  remove_n    从列表中删除网络及其配置（即删除网络0）
add_network     add_n       向列表中添加新网络。其ID将自动创建
set_network     set_n       显示了在没有参数的情况下配置网络的非常短的可用选项列表。
get_network     get_n       显示指定网络所需的参数
save_config     save_c      saves the configuration


+Key        +Description                            +Parameters
____________|_______________________________________|___________________________
ssid        |Access point name                      |string
id_str      |String identifying the network         |string
priority    |Connection priorty over other APS      |number(o being the default low priority)
bssid       |Mac address of the access point        |mac address
scan_ssid   |Enable/disable ssid scan               |0, 1, 2
key_mgmt    |Type of key management                 |WPA-PSK, WPA_EAP, None
pairwise    |Pariwise ciphers for WPA               |CCMP, TKIP
group=TKIP  |Group ciphers for WPA                  |CCMP, TKIP, WEP104, EWP40
psk         |Pre-Shared Key(clear or encrypted)     |string
wep_key0    |WEP key (up to 4: wep_key[0123])       |string
eap         |Extensible Authentication Protocol     |MD5, MSCHAPV2, OTP, GTC, TLS, PEAP, TTLS
identity    |EAP idenntity string                   |string
password    |EAP password                           |string
ca_cert     |Pathname to CA certificate file        |/full/path/to/certificate
client_cert |Pathname to client certificate         |/full/path/to/certificate (PEM/DER)
private_key |Pathname to a client private key file  |/full/path/to/private_key (PEM/DER/PFX)
____________|_______________________________________|___________________________
    
    
    
    
### ===========================================================================    
    -D 驱动程序名称（可以是多个驱动程序：nl80211，wext）
    -i 接口名称
    -c 配置文件　
    -B 在后台运行守护进程 
% wpa_supplicant是一个连接、配置WIFI的工具，它主要包含 wpa_supplicant与wpa_cli 两个程序. 
% 可以通过wpa_cli来进行WIFI的配置与连接,前提要保证wpa_supplicant正常启动
% 启动wpa_supplicant应用

wpa_supplicant -D nl80211 -i wlan0 -c /etc/wpa_supplicant.conf -B











### =================================================================== wpa_cli
% 启动wpa_cli
wpa_cli -i wlan0 scan         　//搜索附件wifi热点
wpa_cli -i wlan0 scan_result 　 //显示搜索wifi热点
wpa_cli -i wlan0 status        //当前WPA/EAPOL/EAP通讯状态
wpa_cli -i wlan0 ping          //pings wpa_supplicant


% 添加新的连接
wpa_cli -i wlan0 add_network   //添加一个网络连接,会返回<network id> 
wpa_cli set_network <network id>  ssid '"name"'  //ssid名称 
wpa_cli set_network <network id>  psk '“psk”'　　//密码
wpa_cli set_network <network id>  scan_ssid 1   
wpa_cli set_network <network id>  priority  1   //优先级


% 保存连接
wpa_cli -i wlan0 save_config   //信息保存到默认的配置文件中


% 断开连接
wpa_cli -i wlan0 disable_network <network id> 


% 连接已有连接
wpa_cli -i wlan0 list_network  //列举保存过得连接
wpa_cli -i wlan0 select_network  <network id>  //连接指定的ssid 
wpa_cli -i wlan0 enable_network  <network id>  //使能制定的ssid 



### ===========================================================================
% 配置文件 /etc/wpa_supplicant.conf文件里，添加下面代码:
% ctrl_interface指向的是一个目录，
% 在这个目录中默认会生成一个文件/var/run/wpa_supplicant/wlan0，这是local socket address，
% 相当于UNIX Domain Socket,程序和后台程序wpa_supplicant进行通信
% （其实是wpa_supplicant作为后台服务程序是通过本地socket和客户端进行通信的）

ctrl_interface=/var/run/wpa_supplicant　// 
update_config=1  // 强制更新覆盖配置　





### ====================================================== wpa_supplicant配置文件
% 以上是通过命令行工具wpa_cli来实现wifi网络的连接。
% 当然，也可以通过wpa_supplicant的配置文件来实现连接。
% 再回顾下运行wpa_supplicant时执行的命令：
/system/bin/wpa_supplicant -d -Dwext -iwlan0 -c/data/misc/wifi/wpa_supplicant.conf
% 我们在执行时加上了-c/data/misc/wifi/wpa_supplicant.conf，
% 我们可以将我们要连接的AP的设置以一定的格式写入wpa_supplicant.conf配置文件中即可。


ctrl_interface=DIR=/data/system/wpa_supplicant GROUP=system update_config=1

network={

ssid="my access point"

proto=WPA

key_mgmt=WPA-PSK

psk="you pass words"

}


### ===========================================================================
% Wpa_supplicant是linux系统下一个非常强大的无线网卡管理程序。
% google搜索到的它似乎不支持WPA2和AES，
% 其实不然，参考它的文档可以发现，WPA2只是RSN的别名，
% 而AES也是CCMP的一部分，所以它们的支持完全是没有问题的。
% 它的文档看起来非常复杂，其实配置非常简单，下面先给出我的wpa_supplication.conf
    ctrl_interface=/var/run/wpa_supplicant  
    ctrl_interface_group=wheel  
    update_config=1  
      
    network={  
        ssid="xxxx"  
        scan_ssid=1  
        psk=xxxxxxxxx37bca5cf24a345f514d319211822f568bba28f8f0b74c894e7644  
        proto=RSN  
        key_mgmt=WPA-PSK  
        pairwise=CCMP  
        auth_alg=OPEN  
    }  


% network=开始是无线接入点的具体配置，一般的无线接入点可以用wpa_passphrase来自动生成，语法是 
$ wpa_passphrase TPLINK 12345678  
network={  
        ssid="TPLINK"  
        #psk="12345678"  
        psk=992194d7a6158009bfa25773108291642f28a0c32a31ab2556a15dee97ef0dbb  
}  
这里表示名为TPLINK的接入点，密码是12345678，
输出就是该接入点在wpa_supplicant.conf里面的配置内容，可以直接用下面的命令自动写入  
% ~ $ wpa_passphrase TPLINK 12345678 |sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf  



% 继续解释最开始的例子，network=后面的内容
ssid ：接入点名称，这个没什么好说的
scan_ssid=1 ：这个很容易错过，如果你的无线接入点是隐藏的，那么这个就是必须的，亲身经历，折腾了好久才搞定，记之备忘。
psk=xx :是加密后的密码，用wpa_passphrase自动生成的
proto=RSN  WPA2就选这个，抄一下官方配置文件例子里面的：
    # proto: list of accepted protocols ---支持的协议列表  
    # WPA = WPA/IEEE 802.11i/D3.0    
    # RSN = WPA2/IEEE 802.11i (also WPA2 can be used as an alias for RSN) ---也能使用WPA2，它只是RSN的一个别名而已  
    # If not set, this defaults to: WPA RSN   ---如果不设置，默认就是WPA RSN，即全部支持  


% key_mgmt= 认证密钥管理协议，还是抄：
    # key_mgmt: list of accepted authenticated key management protocols  ---支持的协议列表  
    # WPA-PSK = WPA pre-shared key (this requires 'psk' field)     ---一般都是这个，这就包括了WPA、WPA2开始的那些方式  
    # WPA-EAP = WPA using EAP authentication    ---这个就是WEP开头的，猜的，求验证  
    # IEEE8021X = IEEE 802.1X using EAP authentication and (optionally) dynamically  
    #   generated WEP keys  
    # NONE = WPA is not used; plaintext or static WEP could be used  ---这个是开放的，没密码，联通、电信之类的就这个  
    # WPA-PSK-SHA256 = Like WPA-PSK but using stronger SHA256-based algorithms  
    # WPA-EAP-SHA256 = Like WPA-EAP but using stronger SHA256-based algorithms  
    # If not set, this defaults to: WPA-PSK WPA-EAP ---如果未设置，默认支持WAP、WEP开头那些  


% pairwise= 这个就是加密方式，继续抄
    # pairwise: list of accepted pairwise (unicast) ciphers for WPA   ---WPA可用的加密方式列表  
    # CCMP = AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0]  ---看到没，这个就是AES，换了马甲而已  
    # TKIP = Temporal Key Integrity Protocol [IEEE 802.11i/D7.0] ---TKIP 这个倒是没变  
    # NONE = Use only Group Keys (deprecated, should not be included if APs support  
    #   pairwise keys)   ---这个估计很少用  
    # If not set, this defaults to: CCMP TKIP  ---不设置的话是CCMP TKIP，看似正确，其实有些路由器无法自动识别，只能二选一，很坑爹。  
















### 安装 YouCompleteMe
YouComplete 是一款强大的基于语义的代码自动补全插件，支持 c/c++ 、 python 等多种语言，还集成了其他一些实用插件
% 项目地址：https://github.com/ycm-core/YouCompleteMe


% YouCompleteMe依赖
支持 python2或pyhton3 的 vim 7.4.1578 或以上版本，
可在 vim 中输入:version查看，如果 python2或3 前面有 + 就表示支持，
没有的话需要重新编译安装 vim 并在安装时指定对 python 的支持；
python2 或 python3 构建环境；
cmake 工具；


% """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" plug-in 插件管理器配置文件 
call plug#begin('~/.vim/plugged')                                          
Plug 'scrooloose/nerdtree'
Plug 'Valloric/YouCompleteMe'
"Plug 'ycm-core/YouCompleteMe'
call plug#end()


% """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""NERDTreeFind 插件配置文件
nnoremap ,v :NERDTreeFind<cr>  " 将 ,v ,g 设置为开关NERDTree的快捷键,在 normal模式下
nnoremap ,g :NERDTreeToggle<cr>
autocmd vimenter * NERDTree                     " 打开vim时自动打开NERDTree
autocmd vimenter * if !argc()|NERDTree|endif    " 打开vim时如果没有文件自动打开NERDTree
let g:NERDTreeHidden=0                          " 不显示隐藏文件
let g:NERDTreeDirArrowExpandable = '+'          " 修改树的显示图标
let g:NERDTreeDirArrowCollapsible = '-'
"let g:NERDTreeSize=20                          " 窗口尺寸
let g:NERDTreeShowLineNumbers=1                 " 窗口是否显示行号


% """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""YouCompleteMe 插件配置文件
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_complete_in_comments=1
let g:ycm_confirm_extra_conf = 0
let g:ycm_complete_in_strings=1
let g:ycm_collect_identifiers_from_comments_and_strings=0
autocmd InsertLeave * if pumvisible()==0\pclose\endif
inoremap <expr> <CR> pumvisble() ? "\<C-y>" : "\<CR>"
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


% """"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 编辑ycm_extra_conf.py文件，写入下面代码 
""" sudo vim .ycm_extra_conf.py
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
import os import ycm_core flags = [
	'-isystem',
	'-/usr/include/c++/5',
	'-system',
	'usr/include',
    '-Wall',   
    '-Wextra',   
    '-Werror',  
    '-Wno-long-long',  
    '-Wno-variadic-macros',  
    '-fexceptions',   
    '-ferror-limit=10000',   
    '-DNDEBUG',  
    '-std=c99',   
    '-xc',   
    '-isystem/usr/include/',
    '-system',
    '-/usr/include/c++/5/bits' 
    ] 
SOURCE_EXTENSIONS = [ 
                         '.cpp', 
                         '.cxx', 
                         '.cc', 
                         '.c', 
                         ] 
def FlagsForFile( filename, **kwargs ):   
    return {
        'flags': flags,   
        'do_cache': True   
    }
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



% YouCompleteMe安装
复制Plug 'ycm-core/YouCompleteMe'到 .vimrc 文件的标记处
保存并重新打开vim，执行:PlugInstall回车开始安装。 
plug 会直接克隆 ycm 的主模块到本地目录，然后再克隆子模块，
鉴于国内当前的网络环境，这个过程可能会很漫长，甚至中途克隆失败，
% 此时我们可以到 ~/.vim/plugged/YouCompleteMe 下执行下面一条命令继续克隆子模块
cd ~/.vim/plugged/YouCompleteMe
git submodule update --init --recursive


% 克隆完成后执行
cd ~/.vim/plugged/YouCompleteMe
./install.py --clang-completer


% 构建过程中可能会在下载 libclang 时卡住或失败
这时我们可以重新执行命令进行重试，也可以手动下载 libclang二进制文件 然后拷贝到定的文件夹下
然后重新进行构建
# 1. 下载 libclang
# 2. 拷贝 libclang 的压缩包到 clang_archives 目录
cd ~/.vim/plugged/YouCompleteMe/third_party/ycmd/clang_archives
cp "libclang压缩包路径" .
# 3. 重新开始构建
cd ~/.vim/plugged/YouCompleteMe
./install.py --clang-completer
% 构建完成后，可以看到核心组件 ycm_core 已经构建成功




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
% 打开vim, 下载 YouCompleteMe插件源码
:PlugInstall


% 进入YouCompleteMe插件源码目录编译安装
cd ~/.vim/plugged/YouCompleteMe
% 然后输入
sudo ./install.py --all
% 这是所有补全，有点慢。如果只想要C家族得全补的话可以输：
sudo ./install.py --clang-completer







" ============================================================ 安装Vim 插件管理器
" Download plug.vim and put it in ~/.vim/autoload
"
"   curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim



" ### ================================================= plug-in 插件管理器配置文件 
" Plug-in management           
call plug#begin('~/.vim/plugged')                                          

Plug 'scrooloose/nerdtree'

call plug#end()




" ### ================================================= NERDTreeFind 插件配置文件
    
nmap ,v :NERDTreeFind<cr>                       " 将,v}设置为开关NERDTree的快捷键
nmap ,g :NERDTreeToggle<cr>                     " 将,v}设置为开关NERDTree的快捷键
autocmd vimenter * NERDTree                     " 打开vim时自动打开NERDTree
autocmd vimenter * if !argc()|NERDTree|endif    " 打开vim时如果没有文件自动打开NERDTree
let g:NERDTreeHidden=0                          " 不显示隐藏文件
let g:NERDTreeDirArrowExpandable = '+'          " 修改树的显示图标
let g:NERDTreeDirArrowCollapsible = '-'
"let g:NERDTreeSize=20                          " 窗口尺寸
""let g:NERDTreeShowLineNumbers=1                 " 窗口是否显示行号







""" ==================================================================== 常用配置
"
set cursorline          " 光标所在的当前行高亮
set nocompatible        " 不与 Vi 兼容（采用 Vim 自己的操作命令）
syntax on               " 打开语法高亮。自动识别代码，使用多种颜色显示
set showmode            " 在底部显示，当前处于命令模式还是插入模式
set showcmd             " 命令模式下，在底部显示，当前键入的指令
set mouse=a             " 支持使用鼠标
set encoding=utf-8      " 使用 utf-8 编码 
set t_Co=256            " 启用256色
set novisualbell        " turn off visual bell
set visualbell t_vb=    " turn off error beep/flash   
""
set mouse=a             " 鼠标设置  

""" ### =============================================================  配色方案
"
colorscheme  molokai  
set t_Co=256
set background=dark
let g:molokai_original=1
let g:rehash256=1


""" ============================================================= Tab键和缩进设置		
set noexpandtab         " 不要用空格代替制表符
set autoindent          " 设置自动缩进
set cindent             " cindent对c语法的缩进更加智能灵活   
set smartindent         " 比autoindent稍智能的自动缩进
set smarttab            " 解决 shiftwidth 和 tabstop 不等时的麻烦
set tabstop=4           " Tab键的宽度    
set softtabstop=4       " 统一缩进为4  
set shiftwidth=4        " 反向制表符中的空格数目  
"
" 使回格键（backspace）正常处理indent, eol, start等                       
" set backspace=indent,eol,start 
" 代表的意思是“缩进位置”，“行结束符”，“段首
" 这样设置可以使得 backspace 键在这三个特殊的位置也能进行回删动作
set backspace=2
"
" list开启对于制表符(tab),行尾空格符(trail),行结束符(eol)等等特殊符号的回显
" 有助于你观察这些特殊符号的状态，精确地控制文本的编辑
" set list listchars=eol:¬,tab:▸\ ,trail:.,
"
" 在被分割的窗口间显示空白，便于阅读
""set fillchars=vert:\ ,stl:\ ,stlnc:\ 


		
""" ================================================================ 文件相关设置
set nowrap              " 不自动换行
""set number              " 显示行号
set history=1000        " 历史记录数    
filetype on             " 侦测文件类型     
filetype plugin on      " 顾名思义，这是开启对应插件的 
filetype indent on      " 开启文件类型检查，并且载入与该类型对应的缩进规则
set nobackup            " 用来控制我们是否为当前正在编辑的文件建立备份
set noswapfile          " 不创建交换文件,交换文件主要用于系统崩溃时恢复文件
set ruler               " 在屏幕下方显示标尺
set showmode            " 在左下角显示当前的模式名称，没有显示则代表现在是常规模式
set scrolloff=3         " 光标移动到buffer的顶部和底部时保持3行距离  
set confirm             " 在处理未保存或只读文件的时候，弹出确认
set undofile            " 保留撤销历史

"打开文件监视。如果在编辑过程中文件发生外部改变（比如被别的编辑器编辑了），就会发出提示
set autoread 

" 命令模式下，底部操作指令按下 Tab 键自动补全。
" 第一次按下 Tab，会显示所有匹配的操作指令的清单；
" 第二次按下 Tab，会依次选择各个指令。
set wildmenu
set wildmode=longest:list,full


	
""" ================================================================= 查找和替换
" set ignorecase        " 搜索忽略大小写    
set hlsearch            " 搜索逐字符高亮  
set incsearch           " 输入搜索内容时就显示搜索结果    
set showmatch           " 高亮显示匹配的括号     
set matchtime=5         " 匹配括号高亮的时间（单位是十分之一秒）
set smartcase           " 此选项的开启会让搜索模式更加聪明		



""" ========================================================== Vimscript 映射

noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

""inoremap ( ()<ESC>i
""inoremap [ []<ESC>i
""inoremap { {}<ESC>i
""inoremap < <><ESC>i
""inoremap " ""<ESC>i

" ~~~~~~~~~~~~~~~~~~~~ 命令行模式增强
cnoremap <C-a> <Home>
cnoremap <C-e> <End>


autocmd Filetype c inoremap ,f ### =============================================
autocmd Filetype markdown inoremap ,f ###








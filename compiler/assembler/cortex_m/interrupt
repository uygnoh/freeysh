###
% Cortex-M3 SVC与PendSV
SVC（系统服务调用，亦简称系统调用）和PendSV（可悬起系统调用），它们多用在上了操作系统的软件开发中。

% SVC用于产生系统函数的调用请求。
例如，操作系统通常不允许用户程序直接访问硬件，而是通过提供一些系统服务函数，让用户程序使用SVC发出对系统服务函数的调用请求，
以这种方法调用它们来间接访问硬件。因此，当用户程序想要控制特定的硬件时，它就要产生一个SVC异常，然后操作系统提供的SVC异常服务程序得到执行，
它再调用相关的操作系统函数，后者完成用户程序请求的服务。


% 【使用PendSV控制上下文切换】
事件流：
1、任务A呼叫SVC来请求任务切换（例如，等到某些工作完成）；
2、OS接收到请求，做好上下文切换的准备，并且悬起一个PendSV异常；
3、当CPU退出SVC后，它立即进入PendSV，从而执行上下文切换；
4、当PendSV执行完毕后，将返回到任务B，同时进入线程模式；
5、发生了一个中断，并且中断服务程序已开始执行；
6、在ISR执行过程中，发生SysTick异常，并且抢占了该ISR；
7、OS执行必要的操作，然后悬起PendSV异常以作好上下文切换的准备；
8、当SysTick退出后，回到先前被抢占的ISR中，ISR继续执行；
9、ISR执行完毕并退出后，PendSV服务程序开始执行，并且在里面执行上下文切换；
10、当PendSV执行完毕后，回到任务A，同时系统再次进入线程模式。

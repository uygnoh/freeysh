### ======================================================================= Lua
print("Hello World！")

% lua关键字
if else elseif break for do while return function until end
false true in nill and or not local repeat then
% 一般约定，以下划线开头连接一串大写字母的名字（比如 _VERSION）被保留用于 Lua 内部全局变量


### ======================================================================= 变量
% 全局变量，在默认情况下，变量总是认为是全局的。
全局变量不需要声明，给一个变量赋值后即创建了这个全局变量，
访问一个没有初始化的全局变量也不会出错，只不过得到的结果是：nil。 
% 如果你想删除一个全局变量，只需要将变量赋值为nil。
这样变量b就好像从没被使用过一样。换句话说, 当且仅当一个变量不等于nil时，这个变量即存在。


% Lua 变量
变量在使用前，必须在代码中进行声明，即创建该变量。
编译程序执行代码之前编译器需要知道如何给语句变量开辟存储区，用于存储变量的值。
% Lua 变量有三种类型：全局变量、局部变量、表中的域。
% 函数外的变量默认为全局变量，除非用 local 显示声明。函数内变量与函数的参数默认为局部变量。
% 局部变量的作用域为从声明位置开始到所在语句块结束（或者是直到下一个同名局部变量的声明）。
变量的默认值均为 nil。





### =================================================================== 数据类型
%  Lua是动态类型语言，变量不要类型定义,只需要为变量赋值。 
值可以存储在变量中，作为参数传递或结果返回。
% Lua中有8个基本类型分别为：
nil、boolean、number、string、userdata、function、thread和table。


% 数据类型	描述
nil	        这个最简单，只有值nil属于该类，表示一个无效值（在条件表达式中相当于false）。
boolean	    包含两个值：false和true。
number	    表示双精度类型的实浮点数
string	    字符串由一对双引号或单引号来表示
function	由 C 或 Lua 编写的函数
userdata	表示任意存储在变量中的C数据结构
thread	    表示执行的独立线路，用于执行协同程序
table	    Lua 中的表（table）其实是一个"关联数组"（associative arrays），
数组的索引可以是数字或者是字符串。在 Lua 里，table 的创建是通过"构造表达式"来完成，
最简单构造表达式是{}，用来创建一个空表。



### ===================================================================== 循环
%循环类型	            描述
while 循环	        在条件为 true 时，让程序重复地执行某些语句。执行语句前会先检查条件是否为 true。
for 循环	            重复执行指定语句，重复次数可在 for 语句中控制。
Lua repeat...until 	重复执行循环，直到 指定的条件为真时为止
%循环嵌套	可以在循环内嵌套一个或多个循环语句（while、for、do..while）

while (expression) 
do
    print("hello,world")
end


### ===================================================================== 函数
% Lua 编程语言函数定义格式如下：
optional_function_scope function function_name(argument1, argument2, argument3..., argumentn)
    function_body
    return result_params_comma_separated
end
% 解析：
optional_function_scope
    % 该参数是可选的制定函数是全局函数还是局部函数，未设置该参数末尾为全局函数，
    % 如果你需要设置函数为局部函数需要使用关键字 local。
function_name:
    % 指定函数名称。
argument1, argument2, argument3..., argumentn:
    % 函数参数，多个参数以逗号隔开，函数也可以不带参数。
function_body:
    % 函数体，函数中需要执行的代码语句块。
result_params_comma_separated:
    % 函数返回值，Lua语言函数可以返回多个值，每个值以逗号隔开




### ===================================================================== 运算符
% 算术运算符
% 下表列出了 Lua 语言中的常用算术运算符，设定 A 的值为10，B 的值为 20
操作符	描述	        实例
+	    加法	        A + B 输出结果 30
-	    减法	        A - B 输出结果 -10
*	    乘法	        A * B 输出结果 200
/	    除法	        B / A 输出结果 2
%	    取余	        B % A 输出结果 0
^	    乘幂	        A^2   输出结果 100
-	    负号         -A    输出结果 -10


% 关系运算符
% 下表列出了 Lua 语言中的常用关系运算符，设定 A 的值为10，B 的值为 20：
==	    等于，检测两个值是否相等，相等返回 true，否则返回 false	           
~=	    不等于，检测两个值是否相等，相等返回 false，否则返回 true           
>	    大于，如果左边的值大于右边的值，返回 true，否则返回 false	        
<	    小于，如果左边的值大于右边的值，返回 false，否则返回 true	        
>=	    大于等于，如果左边的值大于等于右边的值，返回 true，否则返回 false	
<=	    小于等于， 如果左边的值小于等于右边的值，返回 true，否则返回 false	



% 逻辑运算符
% 下表列出了 Lua 语言中的常用逻辑运算符，设定 A 的值为 true，B 的值为 false：
and	逻辑与操作符。 如果两边的操作都为 true 则条件为 true。	
or	逻辑或操作符。 如果两边的操作任一一个为 true 则条件为 true。
not	逻辑非操作符。与逻辑运算结果相反，如果条件为 true，逻辑非为 false。	













# perl的命令行参数保存在@ARGV中，而<>以@ARGV为默认参数
# 当然可以对@ARGV进行赋值操作，以改变<>的输入文件
# 命令行的当前执行文件名保存在$0中
#
# 当@ARGV为空的时候即命令行输入为./perl5.pl(执行文件名)时，
# <>的意思为从STDIN中输入，以文件结束符为结尾。
# 当@ARGV不为空的时候，<>将后面的参数按空格区分为文件名，一个个进行打开操作
#
# <>操作符查看@ARGV来决定使用那些文件
# 如果为空，则使用标准输入流，否则使用其找到的相应的文件
# 也就是说，在启动程序之后，使用 <> 之前，还可以修改@ARGV的值
#
# 角符 <> 和 <STDIN> 的区别
# <>可以由指定的档案取得资料，而该档案的档案名可以放在命令列表中加以指定
# <STDIN>是由标准输入取得资料
#
@ARGV = qw{ larry readme }; #强制使用这2个文件
while (<>) {
    chomp;
    print "It was $_ that I saw in some stooge-like file\n";
}

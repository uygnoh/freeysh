###########################################################
### % MCS-8051->存储系统
###########################################################
### % 内部数据存储器
1 内部数据存储器分为低128个单元和高128个单元
2 低128个单元称为内部RAM, 可以被用户使用
3 高128个单元为专用寄存器(SFR)区, 不能被用户使用


### % 低128个单元
1 00H~1FH ->为通用寄存器区R0~R7(分为4组)
2 20H~2FH ->为位寻址区(128个位)
3 30H~7FH ->为用户RAM区(数据缓冲区, 堆栈区)(共有80个单元)


### % 高128个单元
1 A       ->累加器(8bit)
2 B       ->寄存器(8bit)
3 PC      ->程序计数器(16bit)(64K)
4 PSW     ->程序状态字(8bit)(RS1, RS2配置工作寄存组)
5 DPTR    ->数据指针(16bit)(高位字节DPH + 低位字节DPL)
4 SP      ->堆栈指针(8bit)(系统复位时SP=07H)(SP应该设置为30H之后)(SP向上生长)


### % 内部程序存储器ROM
1 0000H~0002H   % 系统启动单元，单片机复位后(PC=0000H)
2 0003H~000AH   % 外部中断0地址区
3 000BH~0012H   % 定时/计数器0中断地址区
4 0013H~001AH   % 外部中断1地址区
5 001BH~0022H   % 定时/计数器1中断地址区
6 0023H~002AH   % 串行中断地址区



###########################################################
### % MCS-8051->时钟与复位
###########################################################
### % 8051时序
1 振荡周期, p
为单片机提供时钟信号的振荡源的周期，也称节拍，用P表示
如果为内部时钟方式，振荡周期即为石英晶体的振荡周期

2 时钟周期, S
将2个振荡周期结合一起，形成时钟周期(P1+P2)
也就是说时钟周期是振荡周期的2倍

3 机器周期
通常将完成一个基本操作所需要的时间称为机器周期
MCS-51中1个机器周期含有6个时钟周期

4 指令周期
是指CPU执行一条指令所需要的时间
一个指令周期通常含有1~4个机器周期


### % 若MCS-51单片机外接晶振为12MHz, 则
振荡周期 = 1/(12MHz) = 1/12us = 0.0833us
时钟周期 = 振荡周期*2 = 1/6us = 0.167us
机器周期 = 时钟周期*6 = 振荡周期*12 = 1us
指令周期 = 1~4us


### % MCS-51单片机复位
0 % 冷启动 ->当系统初始加电的时候, 上电复位
1 % 热启动 ->当程序运行死机的时候, 按钮复位
2 % 单片机复位条件



###########################################################
### % MCS-8051->指令系统
###########################################################
### % MCS-8051汇编语言格式:   
[标号:] 操作码助记符 [目的操作数,] [源操作数] [;注释]


### % MCS-8051描述符
Rn          % 当前选中的寄存器组的8个寄存器R0~R1(n=0~7)
Ri          % 当前选中的寄存器组中的可以作为间接寻址寄存器使用的2个工作寄存器(R0,R1)
direct      % 8位的内部数据存储器单元中的地址，(内部RAM地址或专用寄存器地址)
#data       % 包含在指令中的8位立即数
#data16     % 包含在指令中的16位立即数
addr16      % 16位的目的地址
addr11      % 11位的目的地址
rel         % 8位有符号的偏移字节，简称偏移量(-128~127)
16进制操作数以字符A~F中的某个开头时，则需要在它
前面加一个“0”，以便在汇编时把它和字符A~F区别开来
例如： #0FH  % 16进制立即数


### % MCS-8051伪指令
1 % ORG
起始伪指令Origin，指明程序的起始地址

2 % END

3 % EQU
X1 EQU 2000H
X2 EQU 0FH
MOV DPTR, #X1

4 % DB(Define Byte)
DB A5H

4 % DW(Define Word)
DW "AA"



###########################################################
### % MCS-8051->寻址方式
###########################################################
1 % 寄存器寻址
MOV A, R0

2 % 直接寻址
MOV A, 3AH

3 % 立即数寻址
MOV A, #3AH

4 % 位寻址(RAM位寻址区20H~2FH)(位寻址区范围00H~7FH)
MOV C, 3AH

5 % 寄存器间接寻址
MOV R0, 3AH     ; % 把3AH单元的内容送累加器R0中
MOV A, @R0      ; % 以R0寄存器内容3AH为地址，
                  % 把该地址单元的内容送累加器A中

6 % 变址寻址(是为了访问程序存储器中的数据表格)
80C51的变址寻址以DPTR或PC作为基址寄存器，以累加器A作为变址寄存器，
并以两者内容相加形成的16位地址作为操作数地址，以达到访问数据表格的目的。
MOVC A, @A+DPTR ; % 把DPTR和A的内容相加得到一个程序存储器地址，
                  % 再把该地址单元的内容送累加器A
                  % 因此，符号@应理解为是针对“A+DPTR”的，而不是针对A的。
MOVC A, @A+PC
JMP @A+DPTR     ; % 无条件转移指令

7 % 相对寻址
目的地址 = 转移指令地址 + 转移指令字节数 + rel



###########################################################
### % MCS-8051->指令集
###########################################################
1 % 数据传送指令(8)
MOV, MOVX, MOVC, XCH, XCHD, SWAP, PUSH, POP


2 % 算术运算指令(24)
% 算术运算指令结果影响PSW的有关位
CY      % 进位标志位(在加减法中存放进位和借位，在移位操作中也可能用到)
AC      % 半进位标志位(表示低4位对高4位有进位或借位时的标志位)
F0      % 用户标志位，由用户进行定义和使用
OV      % 溢出标志位
        % (加法运算中，OV=1，表示运算结果超过A的表示范围)
        % (乘法运算中，OV=1，表示乘积存放在A和B中)
        % (除法运算中，OV=1，表示除数为0，无法进行计算)
P       % 奇偶标志位，表示累加器A中“1”的个数，若1的个数为偶数，则P=0       
ADD A, R0
如果“位3”有进位，则半进位标志位AC置“1”，否则清零
如果“位7”有进位，则进位标志位  CY置“1”，否则清零
如果两个数相加溢出，则OV置“1”，否则清零


2 % 位操作指令()


3 % 转移操作指令()











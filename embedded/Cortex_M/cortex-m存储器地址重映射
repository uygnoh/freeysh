###########################################################
### stm32存储器地址重映射
###########################################################
% 复位之后总是从地址0x04取复位代码的起始地址
% 以及从0x00取堆栈指针，开始执行复位程序

% 3块可用于启动的存储器的物理地址
1 片上SRAM起始地址                    0x2000,0000
2 片上用户闪存起始地址                 0x0800,0000
3 片上系统闪存(BootLoader)起始地址     0x1FFF,0000
% 由Boot引脚块定以上3块物理存储器中的那块映射到 0x0的起始地址
% Boot引脚在复位后第4个SYSCLK上升沿采样锁定
% 从待机模式(Standby)退出后，会重新采样BOOT引脚电平



###########################################################
### stm32提供了地址重映射寄存器
###########################################################
% SYSCFG_MEMRMP(0x4001_3800)
Bits 31:2   保留
Bits  1:0   MEM_MODE设置存储器地址重映射模式，由软件置位和清除。
            复位之后，这2位的值自动根据Boot引脚选择的启动模式进行设置。
      00    片上用户闪存空间映射到0x0000_0000位置
      01    片上系统闪存空间映射到0x0000_0000位置
      10    FSMC Bank1(NOR/RSRAM 1和2)映射到0x0000_0000位置
      11    片上SRAM映射到0x0000_0000位置
% 复位之后，Boot引脚的值被复制到该寄存器
！唯一例外的是，当Boot1=1 Boot2=0；从片上闪存启动时，寄存器值=0x00



###########################################################
### cortex-m3中断
###########################################################
% 向量表定义了中断的处理例程的入口地址，缺省情况下，CM3认为向量表位于零地址处
% 响应中断时，CM3会根据中断号从表中找出对应的中断处理程序的入口地址
% 每个表项占用4个字节
% 位置0x0000，0000处保存的是MSP的初始值
0x0000_0000     0   MSP初始值
0x0000_0004     1   复位向量地址
0x0000_0008     2   NMI异常处理程序起始地址
0x0000_000C     3   硬fault异常处理程序起始地址
...
0x0000_0040     16  IRQ#0中断处理程序起始地址


% CM3离开复位状态时，首先要做的是读取下面两个值
1 从地址0x0000_0000，取出MSP的值
2 从地址0x0000_0000，取出复位向量(程序开始执行的地址，LSB必须是1)




###########################################################
### cortex-m3向量表重定位
###########################################################
% 可以通过修改“向量表偏移寄存器VTOR”来重定位向量表
% 向量表的起始地址的限制
1 必须先求出系统中有多少个向量，再把该数字向上“圆整”到2的整次幂
2 而起始地址必须对齐到后者的边界上
% 例如，一共有32个中断，则共有32+16=48个向量
向上圆整到2的整次幂后值为64，因此向量表重定位的地址必须能被64x4=256整除，
合法的地址可以是： 0X0, 0X100, 0X200

% 向量表偏移量寄存器VTOR，0xE000_ED08
% 向量表只能放在内部Flash和RAM区
位       名称        类型    复位值     描述
31:30   Reserved            
29      TBLBASE     R/W     0       向量表是在Code区为0，在RAM区为1
28:7    TBLOFF      R/W     0
6 :0    Reserved







